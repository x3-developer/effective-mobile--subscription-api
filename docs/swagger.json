{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "REST API for managing subscriptions",
        "title": "Subscription API",
        "contact": {
            "name": "API Support",
            "email": "x3.na.tri@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/subscription": {
            "get": {
                "description": "Retrieve all subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Get all subscriptions",
                "responses": {
                    "200": {
                        "description": "List of subscriptions",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionList200"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Create a new subscription",
                "parameters": [
                    {
                        "description": "Subscription to create",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionCreate201"
                        }
                    },
                    "400": {
                        "description": "Bad Request or Validation Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionCreate400"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/subscription/total-cost": {
            "get": {
                "description": "Retrieve total cost of subscriptions by a given date range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Get total cost of subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in format YYYY-MM-DD",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date in format YYYY-MM-DD",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by subscription name",
                        "name": "subscriptionName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total cost of subscriptions",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionGetTotalCost200"
                        }
                    },
                    "400": {
                        "description": "Validation error or bad request",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response400"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        },
        "/api/v1/subscription/{id}": {
            "get": {
                "description": "Retrieve subscription by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Get subscription by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionGetById200"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response400"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response404"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete subscription by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Delete subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription deleted",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionDelete200"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response400"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response404"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update subscription by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscription"
                ],
                "summary": "Update subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription update payload",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription updated",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionUpdate200"
                        }
                    },
                    "400": {
                        "description": "Bad request or validation error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.SubscriptionUpdate400"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/docsResponse.Response500"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "docsResponse.ErrorField": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "NOT_BLANK",
                        "NOT_FOUND",
                        "MIN_LENGTH",
                        "MAX_LENGTH"
                    ]
                },
                "field": {
                    "type": "string",
                    "enum": [
                        "name",
                        "price",
                        "userId",
                        "startDate",
                        "endDate"
                    ]
                }
            }
        },
        "docsResponse.Response400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.Response404": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "NOT_FOUND"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Resource not found"
                }
            }
        },
        "docsResponse.Response500": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "SERVER_ERROR"
                    ]
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "docsResponse.SubscriptionCreate201": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionCreate400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.ErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "docsResponse.SubscriptionDelete200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionGetById200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionGetTotalCost200": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "integer"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionList200": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ResponseDTO"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionUpdate200": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ResponseDTO"
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "docsResponse.SubscriptionUpdate400": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "enum": [
                        "BAD_REQUEST"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/docsResponse.ErrorField"
                    }
                },
                "isSuccess": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "Bad request or validation error"
                }
            }
        },
        "dto.CreateDTO": {
            "type": "object",
            "required": [
                "name",
                "price",
                "startDate",
                "userId"
            ],
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "startDate": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.ResponseDTO": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateDTO": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "startDate": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}