definitions:
  docsResponse.ErrorField:
    properties:
      errorCode:
        enum:
        - NOT_BLANK
        - NOT_FOUND
        - MIN_LENGTH
        - MAX_LENGTH
        type: string
      field:
        enum:
        - name
        - price
        - userId
        - startDate
        - endDate
        type: string
    type: object
  docsResponse.Response400:
    properties:
      errorCode:
        enum:
        - BAD_REQUEST
        type: string
      isSuccess:
        example: false
        type: boolean
      message:
        example: Bad request or validation error
        type: string
    type: object
  docsResponse.Response404:
    properties:
      errorCode:
        enum:
        - NOT_FOUND
        type: string
      isSuccess:
        example: false
        type: boolean
      message:
        example: Resource not found
        type: string
    type: object
  docsResponse.Response500:
    properties:
      errorCode:
        enum:
        - SERVER_ERROR
        type: string
      isSuccess:
        example: false
        type: boolean
      message:
        example: Internal server error
        type: string
    type: object
  docsResponse.SubscriptionCreate201:
    properties:
      data:
        $ref: '#/definitions/dto.ResponseDTO'
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionCreate400:
    properties:
      errorCode:
        enum:
        - BAD_REQUEST
        type: string
      fields:
        items:
          $ref: '#/definitions/docsResponse.ErrorField'
        type: array
      isSuccess:
        example: false
        type: boolean
      message:
        example: Bad request or validation error
        type: string
    type: object
  docsResponse.SubscriptionDelete200:
    properties:
      data:
        $ref: '#/definitions/dto.ResponseDTO'
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionGetById200:
    properties:
      data:
        $ref: '#/definitions/dto.ResponseDTO'
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionGetTotalCost200:
    properties:
      data:
        type: integer
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionList200:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.ResponseDTO'
        type: array
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionUpdate200:
    properties:
      data:
        $ref: '#/definitions/dto.ResponseDTO'
      isSuccess:
        example: true
        type: boolean
    type: object
  docsResponse.SubscriptionUpdate400:
    properties:
      errorCode:
        enum:
        - BAD_REQUEST
        type: string
      fields:
        items:
          $ref: '#/definitions/docsResponse.ErrorField'
        type: array
      isSuccess:
        example: false
        type: boolean
      message:
        example: Bad request or validation error
        type: string
    type: object
  dto.CreateDTO:
    properties:
      endDate:
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      price:
        minimum: 0
        type: integer
      startDate:
        type: string
      userId:
        type: string
    required:
    - name
    - price
    - startDate
    - userId
    type: object
  dto.ResponseDTO:
    properties:
      endDate:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      startDate:
        type: string
      userId:
        type: string
    type: object
  dto.UpdateDTO:
    properties:
      endDate:
        type: string
      name:
        maxLength: 255
        minLength: 1
        type: string
      price:
        minimum: 0
        type: integer
      startDate:
        type: string
      userId:
        type: string
    type: object
info:
  contact:
    email: x3.na.tri@gmail.com
    name: API Support
  description: REST API for managing subscriptions
  title: Subscription API
  version: "1.0"
paths:
  /api/v1/subscription:
    get:
      description: Retrieve all subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: List of subscriptions
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionList200'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Get all subscriptions
      tags:
      - Subscription
    post:
      consumes:
      - application/json
      description: Create a new subscription
      parameters:
      - description: Subscription to create
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/dto.CreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Subscription created successfully
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionCreate201'
        "400":
          description: Bad Request or Validation Error
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionCreate400'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Create a new subscription
      tags:
      - Subscription
  /api/v1/subscription/{id}:
    delete:
      description: Delete subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Subscription deleted
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionDelete200'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/docsResponse.Response400'
        "404":
          description: Subscription not found
          schema:
            $ref: '#/definitions/docsResponse.Response404'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Delete subscription
      tags:
      - Subscription
    get:
      description: Retrieve subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Subscription found
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionGetById200'
        "400":
          description: Invalid ID
          schema:
            $ref: '#/definitions/docsResponse.Response400'
        "404":
          description: Subscription not found
          schema:
            $ref: '#/definitions/docsResponse.Response404'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Get subscription by ID
      tags:
      - Subscription
    patch:
      consumes:
      - application/json
      description: Update subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Subscription update payload
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Subscription updated
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionUpdate200'
        "400":
          description: Bad request or validation error
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionUpdate400'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Update subscription
      tags:
      - Subscription
  /api/v1/subscription/total-cost:
    get:
      description: Retrieve total cost of subscriptions by a given date range
      parameters:
      - description: Start date in format YYYY-MM-DD
        in: query
        name: startDate
        type: string
      - description: End date in format YYYY-MM-DD
        in: query
        name: endDate
        type: string
      - description: Filter by subscription name
        in: query
        name: subscriptionName
        type: string
      - description: Filter by user ID
        in: query
        name: userId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Total cost of subscriptions
          schema:
            $ref: '#/definitions/docsResponse.SubscriptionGetTotalCost200'
        "400":
          description: Validation error or bad request
          schema:
            $ref: '#/definitions/docsResponse.Response400'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/docsResponse.Response500'
      summary: Get total cost of subscriptions
      tags:
      - Subscription
schemes:
- http
- https
swagger: "2.0"
